---
- name: Obtener e instalar certificado SSL de Let's Encrypt en Apache
  hosts: reports
  become: true

  vars:
  # Dominio
    domain: "leonardope.cloud"
    subdomain: "reports"
    full_domain: "{{ subdomain }}.{{ domain }}"
  
  # Let's Encrypt
    email: "leonardope7@gmail.com"
    acme_directory: "https://acme-v02.api.letsencrypt.org/directory"
    account_key_path: "/etc/letsencrypt/account.pem"
  
  # Certificado
    cert_key_path: "/etc/ssl/private/{{ full_domain }}.pem"
    csr_path: "/etc/ssl/csr/{{ full_domain }}.csr"
    cert_path: "/etc/httpd/ssl/{{ full_domain }}.crt"
    cert_chain_path: "/etc/httpd/ssl/{{ full_domain }}-fullchain.crt"
    cert_chain_only_path: "/etc/httpd/ssl/{{ full_domain }}-chain.crt"

  tasks:

    - name: Instalar pip3 en sistemas basados en RHEL
      ansible.builtin.yum:
        name: python3-pip
        state: present

    - name: Instalar cryptography
      ansible.builtin.pip:
        name: cryptography
        executable: pip3

    - name: "Create required directories"
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      with_items:
        - "/etc/ssl/private/"
        - "/etc/ssl/csr/"
        - "/etc/httpd/ssl/"
        - "/etc/letsencrypt/"
        - "/var/www/html/.well-known/acme-challenge/"
  
    - name: Generate an OpenSSL private key with the default values (4096 bits, RSA) for CSR request
      community.crypto.openssl_privatekey:
        path: "{{ cert_key_path }}"
  
    - name: Generate an OpenSSL private key with the default values (4096 bits, RSA) for ACME account
      community.crypto.openssl_privatekey:
        path: "{{ account_key_path }}"
  
    - name: Generate an OpenSSL Certificate Signing Request
      community.crypto.openssl_csr:
        path: "{{ csr_path }}"
        privatekey_path: "{{ cert_key_path }}"
        common_name: "{{ full_domain }}"
      
    - name: Create a challenge for sample.com using a account key file.
      community.crypto.acme_certificate:
        acme_version: 2
        terms_agreed: true
        force: true
        acme_directory: https://acme-v02.api.letsencrypt.org/directory
        account_key_src: "{{ account_key_path }}"
        csr: "{{ csr_path }}"
        dest: "{{ cert_path }}"
        fullchain_dest: "{{ cert_chain_path }}"
      register: sample_com_challenge
  
    - name: Copy http-01 challenge for site
      ansible.builtin.copy:
        dest: /var/www/html/{{ sample_com_challenge['challenge_data']['reports.leonardope.cloud']['http-01']['resource'] }}
        content: "{{ sample_com_challenge['challenge_data']['reports.leonardope.cloud']['http-01']['resource_value'] }}"
      when: sample_com_challenge is changed and 'reports.leonardope.cloud' in sample_com_challenge['challenge_data']
  
    - name: Let the challenge be validated and retrieve the cert and intermediate certificate
      community.crypto.acme_certificate:
        acme_directory: https://acme-v02.api.letsencrypt.org/directory
        account_key_src: "{{ account_key_path }}"
        force: true
        csr: "{{ csr_path }}"
        dest: "{{ cert_path }}"
        fullchain_dest: "{{ cert_chain_path }}"
        chain_dest: "{{ cert_chain_only_path }}"
        data: "{{ sample_com_challenge }}"
    
